/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import { useGLTF } from '@react-three/drei';
import React, { useRef, useState } from 'react';
import * as THREE from 'three';


const Jacket = ({ ...props })=> {
  const { nodes, materials } = useGLTF('/JacketPatchRegions.glb') ;
  const {tokenId} = props
  console.log(tokenId);
  // TODO: remove after patch swapping is complete
  const [patches] = useState({
    patchA: tokenId ==1 ? true : false,
    patchB:tokenId ==1 ? false : true,
    patchC: tokenId ==1 ? true : false,
  });
  const group = useRef();
  // const colorMap = useLoader(TextureLoader, '/nfts/1.png');

  return (
    <group ref={group} {...props} dispose={null}>
      {/* Jacket */}
      <mesh
        geometry={nodes.Object_2.geometry}
        material={materials.Material}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      {/* Shoulder region */}
      {patches.patchA && (
        <mesh geometry={nodes.badge_1001.geometry} material={materials['1']} />
      )}
      {/* Elbow region */}
      {patches.patchB && (
        <mesh geometry={nodes['2002'].geometry} material={materials['2']} />
      )}
      {/* Sleeve Region */}
      {patches.patchC && (
        <mesh geometry={nodes['1003'].geometry} material={materials['3']} />
      )}
    </group>
  );
};

useGLTF.preload('/JacketPatchRegions.glb');

export default Jacket;
